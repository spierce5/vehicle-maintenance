{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sam\\\\Desktop\\\\Current_Scripts\\\\Web-Design\\\\spring-react-demo-2\\\\frontend\\\\src\\\\EmployeeList.js\";\nimport React, { Component } from 'react';\nimport { Stack, ButtonGroup, Container, TableContainer, Table, TableHead, TableRow, TableCell, TableBody, IconButton, Dialog, DialogTitle, DialogContentText, DialogContent, DialogActions, Button } from '@mui/material';\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport AppNavbar from './AppNavbar';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EmployeeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      deleteDialogOpen: false\n    };\n    this.remove = this.remove.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('/employees').then(response => response.json()).then(data => this.setState({\n      employees: data\n    }));\n  }\n\n  async remove(id) {\n    await fetch(`/employees/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\n      this.setState({\n        employees: updatedEmployees\n      });\n    });\n  }\n\n  render() {\n    const {\n      employees,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    }\n\n    const employeeList = employees.map(employee => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          style: {\n            whiteSpace: 'nowrap'\n          },\n          children: employee.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: employee.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"success\",\n              component: Link,\n              to: \"/employees/\" + employee.id,\n              children: /*#__PURE__*/_jsxDEV(ModeEditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              color: \"error\",\n              onClick: () => this.remove(employee.id),\n              children: /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n              open: this.deleteDialogOpen,\n              onClose: this.setState({ ...this.state,\n                deleteDialogOpen: false\n              }),\n              \"aria-labelledby\": \"alert-dialog-title\",\n              \"aria-describedby\": \"alert-dialog-description\",\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                id: \"alert-dialog-title\",\n                children: \"Are you sure you want to delete this employee?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n                children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n                  id: \"alert-dialog-description\",\n                  children: \"Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps are running.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClose,\n                  children: \"Disagree\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleClose,\n                  autoFocus: true,\n                  children: \"Agree\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, employee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AppNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Employees\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"success\",\n            component: Link,\n            to: \"/employees/new\",\n            children: /*#__PURE__*/_jsxDEV(PersonAddAlt1Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  width: \"30%\",\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  width: \"30%\",\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  width: \"40%\",\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: employeeList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EmployeeList;","map":{"version":3,"names":["React","Component","Stack","ButtonGroup","Container","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","IconButton","Dialog","DialogTitle","DialogContentText","DialogContent","DialogActions","Button","ModeEditIcon","DeleteForeverIcon","PersonAddAlt1Icon","AppNavbar","Link","EmployeeList","constructor","props","state","employees","deleteDialogOpen","remove","bind","componentDidMount","fetch","then","response","json","data","setState","id","method","headers","updatedEmployees","filter","i","render","isLoading","employeeList","map","employee","whiteSpace","name","email","handleClose"],"sources":["C:/Users/Sam/Desktop/Current_Scripts/Web-Design/spring-react-demo-2/frontend/src/EmployeeList.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Stack, ButtonGroup, Container, TableContainer, \r\n        Table, TableHead, TableRow, TableCell, TableBody, \r\n        IconButton, Dialog, DialogTitle, DialogContentText,\r\n        DialogContent, DialogActions, Button } from '@mui/material';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass EmployeeList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                employees: [],\r\n                deleteDialogOpen: false\r\n            };\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/employees')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({employees: data}));\r\n    }\r\n\r\n    async remove(id) {\r\n        await fetch(`/employees/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\r\n            this.setState({employees: updatedEmployees});\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const {employees, isLoading} = this.state;\r\n    \r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n    \r\n        const employeeList = employees.map(employee => {\r\n            return (\r\n                <TableRow key={employee.id}>\r\n                    <TableCell style={{whiteSpace: 'nowrap'}}>{employee.name}</TableCell>\r\n                    <TableCell>{employee.email}</TableCell>\r\n                    <TableCell>\r\n                        <ButtonGroup>\r\n                            <IconButton color=\"success\" component={Link} to={\"/employees/\" + employee.id}>\r\n                                <ModeEditIcon/>\r\n                            </IconButton>\r\n                            <IconButton color=\"error\" onClick={() => this.remove(employee.id)}>\r\n                                <DeleteForeverIcon/>\r\n                            </IconButton>\r\n                            <Dialog\r\n                                open={this.deleteDialogOpen}\r\n                                onClose={this.setState({...this.state, deleteDialogOpen: false})}\r\n                                aria-labelledby=\"alert-dialog-title\"\r\n                                aria-describedby=\"alert-dialog-description\"\r\n                            >\r\n                                <DialogTitle id=\"alert-dialog-title\">\r\n                                {\"Are you sure you want to delete this employee?\"}\r\n                                </DialogTitle>\r\n                                <DialogContent>\r\n                                <DialogContentText id=\"alert-dialog-description\">\r\n                                    Let Google help apps determine location. This means sending anonymous\r\n                                    location data to Google, even when no apps are running.\r\n                                </DialogContentText>\r\n                                </DialogContent>\r\n                                <DialogActions>\r\n                                <Button onClick={handleClose}>Disagree</Button>\r\n                                <Button onClick={handleClose} autoFocus>\r\n                                    Agree\r\n                                </Button>\r\n                                </DialogActions>\r\n                            </Dialog>\r\n                        </ButtonGroup>\r\n                    </TableCell>\r\n                </TableRow>\r\n            )\r\n        });\r\n    \r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <Stack direction=\"row\">\r\n                        <h3>Employees</h3>\r\n                        <IconButton color=\"success\" component={Link} to=\"/employees/new\">\r\n                            <PersonAddAlt1Icon/>\r\n                        </IconButton>\r\n                    </Stack>\r\n                    <TableContainer>\r\n                        <Table className=\"mt-4\">\r\n                            <TableHead>\r\n                            <TableRow>\r\n                                <TableCell width=\"30%\">Name</TableCell>\r\n                                <TableCell width=\"30%\">Email</TableCell>\r\n                                <TableCell width=\"40%\">Actions</TableCell>\r\n                            </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {employeeList}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EmployeeList;"],"mappings":"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"},"metadata":{},"sourceType":"module"}